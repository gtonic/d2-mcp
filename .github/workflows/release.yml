name: Build Release

on:
  push:
    tags: ['*']

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            filename: d2-mcp-linux-amd64
          - goos: linux
            goarch: arm64
            filename: d2-mcp-linux-arm64
          - goos: darwin
            goarch: amd64
            filename: d2-mcp-darwin-amd64
          - goos: darwin
            goarch: arm64
            filename: d2-mcp-darwin-arm64
          - goos: windows
            goarch: amd64
            filename: d2-mcp-windows-amd64.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
      
      - name: Create release directory
        run: mkdir -p release
      
      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o release/${{ matrix.filename }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: release/${{ matrix.filename }}
          if-no-files-found: error

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
